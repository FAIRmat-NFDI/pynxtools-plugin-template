[build-system]
requires = ["setuptools>=78.1.1", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

{%- set license_classifiers = {
    "Apache Software License 2.0": "License :: OSI Approved :: Apache Software License",
    "BSD-3": "License :: OSI Approved :: BSD License",
    "GNU GPL v3.0+": "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "MIT": "License :: OSI Approved :: MIT License",
    "Mozilla Public License Version 2.0": "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
} %}

[project]
name = "{{cookiecutter.__package_name}}"
dynamic = ["version"]
authors = [
    { name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.author_email}}" },
]
description = "{{cookiecutter.short_description}}"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
{%- if cookiecutter.license in license_classifiers %}
    "{{ license_classifiers[cookiecutter.license] }}",
{%- endif %}
    "Operating System :: OS Independent",
]
dependencies = [
    "pynxtools>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "mypy",
    "ruff>=0.14.0",
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "types-pyyaml",
    "types-pytz",
    "types-requests",
    "pre-commit",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-material-extensions",
    "mkdocs-macros-plugin",
    "pymdown-extensions",
    "mkdocs-click"
]
{% if cookiecutter.include_nomad_app or cookiecutter.include_nomad_example_upload -%}
nomad = ["nomad-lab[parsing, infrastructure]>=1.3.17"]
{%- endif %}

[project.urls]
"Homepage" = "https://github.com/FAIRmat-NFDI/{{cookiecutter.__package_name}}"
"Bug Tracker" = "https://github.com/FAIRmat-NFDI/{{cookiecutter.__package_name}}/issues"

[project.entry-points.'pynxtools.reader']
{{cookiecutter.reader_name}} = "{{cookiecutter.__module_name}}.reader:{{cookiecutter.__reader_class}}"
{%- if cookiecutter.include_nomad_app or cookiecutter.include_nomad_example_upload %}

[project.entry-points.'nomad.plugin']
{%- if cookiecutter.include_nomad_app %}
{{cookiecutter.__nomad_app}} = "{{cookiecutter.__module_name}}.nomad.apps:{{cookiecutter.__nomad_app}}"
{%- endif %}
{%- if cookiecutter.include_nomad_example_upload %}
{{cookiecutter.__nomad_example}} = "{{cookiecutter.__module_name}}.nomad.example_uploads:{{cookiecutter.__nomad_example}}"
{%- endif %}

[tool.uv]
extra-index-url = [
    "https://gitlab.mpcdf.mpg.de/api/v4/projects/2187/packages/pypi/simple",
]
{%- endif %}

[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.setuptools_scm]
version_scheme = "no-guess-dev"
local_scheme = "node-and-date"

[tool.ruff]
include = ["src/{{cookiecutter.__module_name}}/*.py", "tests/*.py"]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "PL", # pylint
    "UP", # pyupgrade
    "F401", # remove unused import
    "I001", # sort imports
    "NPY201", # upgrade numpy v2
]
ignore = [
    "E501", # Line too long ({width} > {limit} characters)
    "E701", # Multiple statements on one line (colon)
    "E731", # Do not assign a lambda expression, use a def
    "E402",  # Module level import not at top of file
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLW0603", # Using the global statement
    "PLW2901", # redefined-loop-name
    "PLR1714", # consider-using-in
    "PLR5501", # else-if-used
]
fixable = ["ALL"]
isort.split-on-trailing-comma = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
strict = false
ignore_missing_imports = true
follow_imports = "silent"
no_strict_optional = true
disable_error_code = "import, annotation-unchecked"
